plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'spring_rest_docs'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	//Querydsl 설정
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor"com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"


	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'


	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

}

tasks.named('test') {
	useJUnitPlatform()
}
ext { // 스니펫 생성 디렉토리 설정
	snippetsDir = file('build/generated-snippets')
}

test { // 스니펫 생성 test 테스크 설정
	outputs.dir snippetsDir
}

asciidoctor { // asciidoctor 테스크 설정
	inputs.dir snippetsDir // 스니펫 위치 설정
	configurations 'asciidoctorExt' // asciidoctor 확장 설정
	dependsOn test // test 테스크 후 asciidoctor 실행 설정
}

